# Завойских Евгения, ИУ7-13Б
# Написать программу, выполняющую команды из меню по имитации работы базы данных


import pickle as p

dbname = ''  # Название БД
size = 0  # Размер файла
fields = ['number', 'director', 'year']  # Поля записи
choice = None  # Выбор команды еще не сделан

while choice != '0':  # Пока пользователь не решил выйти
    # Вывод списка команд
    print('\nСписок команд: ')
    print('1 - создание (открытие) базы данных')
    print('2 - добавление записи в базу данных')
    print('3 - вывод всей базы данных')
    print('4 - поиск записи по одному полю')
    print('5 - поиск записи по двум полям')
    print('0 - выход')
    choice = input('Введите номер нужной команды: ')  # Ввод нужной команды

    if choice == '0':  # Выход из программы
        print('Выход')

    elif choice == '1':  # Создание (открытие) БД
        dbname = input('Введите название базы данных: ')  # Ввод названия БД
        f = open(dbname, 'ab+')  # Создание (открытие) файла для БД
        size = f.tell()  # Размер файла
        f.close()

    elif choice == '2':  # Добавление записи в БД
        if dbname != '':  # БД создана
            school = {}  # Добавляемая запись
            school['number'] = input('Введите номер школы: ')  # Ввод первого поля
            while not school['number'].isdigit():  # Ждем пока не будет числа
                school['number'] = input('Это должно быть неотрицательное целое число: ')
            school['director'] = input('Введите фамилию директора: ')  # Ввод второго поля
            school['year'] = input('Введите год основания: ')  # Ввод третьего поля
            while not school['year'].isdigit():  # Ждем пока не будет числа
                school['year'] = input('Это должно быть неотрицательное целое число: ')

            f = open(dbname, 'ab+')  # Открываем БД на дозапись
            p.dump(school, f)  # Записываем новую запись
            size = f.tell()  # Размер файла
            f.close()
        else:
            print('Создайте базу данных')

    elif choice == '3':  # Вывод всей БД
        if dbname != '':  # БД создана
            w = 24  # Ширина столбца таблицы
            print('      Номер школы       |        Директор        |      Год основания')
            print('-' * w + '+' + '-' * w + '+' + '-' * w)

            with open(dbname, 'rb') as f:  # Открываем БД на чтение
                # Пока не дошли до конца файла
                while f.tell() < size:
                    school = p.load(f)  # Считываем очередную запись
                    # Выводим поля записи в соответствующих столбцах
                    print(school['number'].rjust(w // 2, ' ').ljust(w, ' '), end='|')
                    print(school['director'].rjust(w // 2, ' ').ljust(w, ' '), end='|')
                    print(school['year'].rjust(w // 2, ' '))
                    print('-' * w + '+' + '-' * w + '+' + '-' * w)
        else:
            print('Создайте базу данных')

    elif choice == '4':  # Поиск записи по одному полю
        if dbname != '':  # БД создана
            field = input('Введите одно из полей: ' + str(fields) + ': ')  # Ввод поля для поиска
            while field not in fields:  # Пока не будет введено одно поле из возможных
                field = input('Введите одно из полей: ' + str(fields) + ': ')
            val = input('Введите значение поля искомой записи: ')  # Ввод значения поля

            with open(dbname, 'rb') as f:  # Открываем БД на чтение
                # Пока не дошли до конца файла
                while f.tell() < size:
                    school = p.load(f)  # Считываем очередную запись
                    if school[field] == val:  # Найдена запись с заданным значением заданного поля
                        print(school['number'] + ',', school['director'] + ',', school['year'])
        else:
            print('Создайте базу данных')

    elif choice == '5':  # Поиск записи по двум полям
        if dbname != '':  # БД создана
            field1 = input('Введите одно из полей: ' + str(fields) + ': ')  # Ввод первого поля для поиска
            while field1 not in fields:  # Пока не будет введено одно поле из возможных
                field1 = input('Введите одно из полей: ' + str(fields) + ': ')
            val1 = input('Введите значение поля искомой записи: ')  # Ввод значения первого поля

            field2 = input('Введите одно из полей: ' + str(fields) + ': ')  # Ввод второго поля для поиска
            while field2 not in fields:  # Пока не будет введено одно поле из возможных
                field2 = input('Введите одно из полей: ' + str(fields) + ': ')
            val2 = input('Введите значение поля искомой записи: ')  # Ввод значения второго поля

            with open(dbname, 'rb') as f:  # Открываем БД на чтение
                # Пока не дошли до конца файла
                while f.tell() < size:
                    school = p.load(f)  # Считываем очередную запись
                    # Найдена запись с заданными значениями заданных полей
                    if school[field1] == val1 and school[field2] == val2:
                        print(school['number'] + ',', school['director'] + ',', school['year'])
        else:
            print('Создайте базу данных')

    else:  # Введен номер несуществующей команды
        print('Введенного номера нет в списке команд, попробуйте снова')
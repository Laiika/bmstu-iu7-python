# Завойских Евгения, ИУ7-13Б
# Написать программу, выполняющую команды из меню

from math import sqrt

def get_digit_or_string(string):   # Функция, возвращающая число, если переданная строка содержит число
    if string.isdigit() or (string[0] == '-' and string[1:].isdigit()):  # Строка содержит целое число
       return int(string)  # Возвращаем целое число из строки
    else:
        try:
            f = float(string)  # Пробуем преобразовать к вещественному
            return f
        except ValueError:  # Строка не содержит вещественное число
            return string  #  Возвращаем строку

def is_prime(x):  # Функция, проверяющая является ли число простым
    prime = True  # Считаем, что число простое
    for i in range(2, int(sqrt(x) + 1)):
        if x % i == 0:  # Число не простое
            prime = False
            break
    return prime  # Возвращаем ответ

def is_word(s):  # Функция, проверяющая является ли строка словом
    word = True  # Считаем, что строка - слово
    for x in s:  # Проверяем символы в строке
        if not ('A' <= x <= 'Z' or 'a' <= x <= 'z' or 'А' <= x <= 'Я' or 'а' <= x <= 'я'):  # В строке есть не буква
            word = False
            break
    return word  # Возвращаем ответ

a = []  # Создание списка
choice = None  # Выбор команды еще не сделан

while choice != '0':  # Пока пользователь не решил выйти
    # Вывод списка команд
    print('\nСписок команд: ')
    print('1 - проинициализировать список первыми N элементами заданного ряда')
    print('2 - добавить элемент в произвольное место списка')
    print('3 - удалить произвольный элемент из списка')
    print('4 - очистить список')
    print('5 - найти значение K-го экстремума в списке, если он является списком чисел')
    print('6 - найти наиболее длинную возрастающую последовательность простых чисел')
    print('7 - найти последовательность, включающую в себя наибольшее количество слов, где каждое слово получается из букв предыдущего')
    print('0 - выход')
    choice = input('Введите номер нужной команды: ')  # Ввод нужной команды

    if choice == '0':  # Выход из программы
        print('Выход')

    elif choice == '1':  # Проинициализировать список первыми N элементами заданного ряда
        if len(a) > 0:  # Список не пустой
            print('Список не пуст, чтобы задать новый, сначала очистите его с помощью команды №4')
        else:  # Список пустой
            b = list(map(str, input('Введите ряд элементов, разделяя их пробелами: ').split()))  # Ввод ряда
            n = int(input('Введите число элементов для создания списка: '))  # Ввод числа элементов n
            while n > len(b) or n < 0:  #  Ввод числа n, пока оно превышает размер ряда или меньше 0
                n = int(input('Число элементов для создания списка должно быть не больше размера ряда и не меньше 0: '))

            for i in range(n):
                a.append(get_digit_or_string(b[i]))  # Добавляем элемент ряда в список с учетом типа

            print('Список проинициализирован первыми %d элементами из ряда' % n)

    elif choice == '2':  # Добавить элемент в произвольное место списка
        x = input('Введите добавляемый элемент: ')  # Ввод элемента
        j = int(input('Введите позицию: '))  # Ввод позиции
        while j > len(a) or j < 0:  # Ввод пока позиция превышает размер списка или меньше 0
            j = int(input('Введите позицию <= %d и > 0: ' % len(a)))

        a.insert(j, get_digit_or_string(x))  # Добавляем элемент ряда на указанную позицию списка с учетом типа
        print('Элемент добавлен на позицию %d' % j)


    elif choice == '3':  # Удалить произвольный элемент из списка
        x = get_digit_or_string(input('Введите удаляемый элемент: '))  # Ввод элемента и преобразование к нужному типу

        if x in a:  # Если введенный элемент есть в списке
            a.remove(x)  # Удаляем элемент
            print('Элемент удален')
        else:  # Введенного элемента нет в списке
            print('Такого элемента нет в списке')

    elif choice == '4':  # Очистить список
        a.clear()  # Очистка списка
        print('Список очищен')

    elif choice == '5':  #  Найти значение K-го экстремума в списке, если он является списком чисел
        f = True  # Считаем, что в списке только числа
        for x in a:  # Проверяем все элементы списка
            if type(x) != int and type(x) != float:  # В списке есть не число
                f = False
                break

        if f:  # В списке только числа
            k = int(input('Введите номер искомого экстремума: '))  # Ввод номера экстремума
            while k <= 0:  # Ввод номера экстремума, пока он не будет положителен
                k = int(input('Введите номер искомого экстремума > 0: '))
            k1 = k

            for i in range(1, len(a) - 1):
                if a[i - 1] > a[i] < a[i + 1] or a[i - 1] < a[i] > a[i + 1]:  # Элемент a[i] является экстремумом
                    k -= 1  # Один из к экстремумов найден

                if k == 0:  # Найден к-ый экстремум
                    x = a[i]
                    break  # Больше не проверяем

            if k == 0:  # К-ый экстремум найден
                print('%d экстремум равен:' % k1, x)
            else:  # В списке меньше к экстремумов
                print('%d экстремума нет' % k1)

        else:  # В списке есть не числовые элементы
            print('Список не числовой')

    elif choice == '6':  # Найти наиболее длинную возрастающую последовательность простых чисел
        start = end = cnt = max = s = e = 0  # Последовательность не найдена
        for i in range(len(a)):
            if type(a[i]) == int and a[i] >= 2 and is_prime(a[i]):  # Элемент - простое число
                if cnt == 0:  # Это первый элемент последовательности
                    cnt += 1
                    s = e = i  # Первый элемент - начало и конец последовательности
                elif a[i] > a[i - 1]:  # Новый элемент не первый и больше предыдущего
                    cnt += 1
                    e += 1  # Новый элемент - конец последовательности
                elif cnt > max:  # Последовательность кончилась, она наиболее длинная из всех предыдущих
                    start = s  # Сохраняем начало
                    end = e  # Сохраняем конец
                    max = cnt
                    cnt = 0  # Ищем новую последовательность
            elif cnt > max:  # Последовательность кончилась, она наиболее длинная из всех предыдущих
                    start = s  # Сохраняем начало
                    end = e  # Сохраняем конец
                    max = cnt
                    cnt = 0  # Ищем новую последовательность

        if cnt > max:  # Последовательность кончилась, она наиболее длинная из всех предыдущих
            start = s  # Сохраняем начало
            end = e  # Сохраняем конец
            max = cnt

        if len(a) == 0:  # Список пуст
            print('Список пустой')
        else:  # Список не пуст
            if max == 0:  # В списке нет нужной последовательности
                print('В списке нет возрастающей последовательности простых чисел')
            else:  # В списке есть нужная последовательность
                print('Наиболее длинная возрастающая последовательность простых чисел:')
                for i in range(start, end + 1):  # Выводим элементы последовательности
                    print(a[i], end=' ')

    elif choice == '7':  # Найти последовательность, включающую в себя наибольшее количество слов, где каждое слово - из букв предыдущего
        start = end = cnt = max = s = e = 0  # Последовательность не найдена
        for i in range(len(a)):
            if type(a[i]) == str and is_word(a[i]):  # Элемент - слово
                if cnt == 0:  # Это первый элемент последовательности
                    s = e = i  # Первый элемент - начало и конец последовательности
                    cnt += 1
                else:  # Новый элемент - не первый
                    f = True  # Считаем, что новое слово войдет в последовательность
                    for j in a[i]:
                        if j not in a[i - 1]:  # В новом слове есть буква, не входящая в предыдущее слово
                            f = False
                            break

                    if f:  # Новое слово входит в последовательность
                        e += 1  # Новый элемент - конец последовательности
                        cnt += 1
                    elif cnt > max:  # Последовательность кончилась, она наиболее длинная из всех предыдущих
                        start = s  # Сохраняем начало
                        end = e  # Сохраняем конец
                        max = cnt
                        cnt = 0  # Ищем новую последовательность
            elif cnt > max:  # Последовательность кончилась, она наиболее длинная из всех предыдущих
                start = s  # Сохраняем начало
                end = e  # Сохраняем конец
                max = cnt
                cnt = 0  # Ищем новую последовательность

        if cnt > max:  # Последовательность кончилась, она наиболее длинная из всех предыдущих
            start = s  # Сохраняем начало
            end = e  # Сохраняем конец
            max = cnt

        if len(a) == 0:  # Список пуст
            print('Список пустой')
        else:  # Список не пуст
            if max == 0:  # В списке нет нужной последовательности
                print('В списке нет последовательности слов, где каждое слово - из букв предыдущего')
            else:  # В списке есть нужная последовательность
                print('Последовательность, включающая в себя наибольшее количество слов, где каждое слово - из букв предыдущего:')
                for i in range(start, end + 1):  # Выводим элементы последовательности
                    print(a[i], end=' ')

    else:  # Введен номер несуществующей команды
        print('Введенного номера нет в списке команд, попробуйте снова')


    
    
        

